<!DOCTYPE html>
<html>
    <head>
        <title>
            CODG136: Tayo's Assignment 2
        </title>
                       
        <!-- Style document elements -->
        <style type="text/css">
            html, body {
                height: 100%;
                margin: 0;
                padding: 0;
            }
            /* Style directions box */
            #directions-box{height:100%;width:30%;float:left;background-color:rgb(203, 203, 209);overflow:auto;}
            #directions-box select, #directions-box input{font-size:1em;}
            #directions-box select{width:60%;}
            #directions{display:inline;padding:0px 10px 0px 0px;margin:10px 0px 0px;font-size:0.9em;}
                                   
            /* Style legend */
            #pins{display:list-item;font-size:0.9em;white-space:nowrap;}
            
            #map {
                height: 100%;
            }
        </style>
        
    </head>

    <body onload="initMap()">
        
        <div id="directions-box">
            <h1>Scenic Stops Along The Pacific Crest Trail</h1>
            <h5 id="directions">This map shows the elevation along the notable stops path </h5>
            <div id="pins">
                <img id="Terminus" src="https://toppng.com/public/uploads/preview/blue-map-pin-blue-google-maps-marker-11562932235xpqssxaj3p.png" alt="Terminus" title="Terminus" width="16px">&#45; Terminus 
                <img id="Stops" src="https://cdn2.iconfinder.com/data/icons/font-awesome/1792/dot-circle-o-512.png" alt="Stops" title="Stops" width="16px">&#45; Stops
            </div>
        </div>

        <div id="map">
        </div>
        
        <script>
            
            // Load the Visualization API and the columnchart package.
            google.load("visualization", "1", { packages: ["columnchart"] });

            function initMap() {
            // The following path marks a path from Mt. Whitney, the highest point in the
            // continental United States to Badwater, Death Valley, the lowest point.
            

                const path = [
                    { lat: 32.590503, lng: -116.460571 },
                    { lat: 34.2848, lng: -118.1900 },
                    { lat: 36.1800, lng: -118.1919 },
                    { lat: 36.4139, lng: -118.2219 },
                    { lat: 36.5833, lng: -118.4842 },
                    { lat: 37.3728, lng: -119.0504 },
                    { lat: 37.41, lng: -119.11 },
                    { lat: 40.2916, lng: -121.3018 },
                    { lat: 41.1830, lng: -122.5628 },
                    { lat: 42.5443, lng: -122.0853 },
                    { lat: 44.0612, lng: -121.4609 },
                    { lat: 44.2844, lng: -121.5035 },
                    { lat: 44.403105, lng: -121.475440 },
                    { lat: 45.0645, lng: -121.0650 },
                    { lat: 45.23, lng: -121.45 },
                    { lat: 45.5110, lng: -121.4537 },
                    { lat: 45.6623, lng: -121.9012 },
                    { lat: 46.1209, lng: -121.2927 },
                    { lat: 46.3044, lng: -121.2714 },
                    { lat: 48.3306, lng: -120.2306 },
                    { lat: 49.000239, lng: -120.799913},
                    
                ]; // Pacific Crest Trail
                const map = new google.maps.Map(document.getElementById("map"), {
                    zoom: 5.7,
                    center: {lat: 42.2132, lng: -121.3546},
                    mapTypeId: "terrain",
                });
                // Create an ElevationService.
                const elevator = new google.maps.ElevationService();

                // Draw the path, using the Visualization API and the Elevation service.
                displayPathElevation(path, elevator, map);

                // This layer will display markers of stops/ terminus along route with information in the info window
                var kmlLayer = new google.maps.KmlLayer({
                    url: 'https://raw.githubusercontent.com/forwebmapping/Assignment-2/main/testtt.kml',
                    preserveViewport: true, 
                    map: map
                });
                // Load the KML layer onto map
                kmlLayer.setMap(map);

            }

            function displayPathElevation(path, elevator, map) {
            // Display a polyline of the elevation path.
                new google.maps.Polyline({
                    path: path,
                    strokeColor: "#990000",
                    strokeOpacity: 0.7,
                    map: map,
                });
                // Create a PathElevationRequest object using this array.
                // Ask for 256 samples along that path.
                // Initiate the path request.
                elevator
                    .getElevationAlongPath({
                    path: path,
                    samples: 256,
                    })
                    .then(plotElevation)
                    .catch((e) => {
                    const chartDiv = document.getElementById("elevation_chart");

                    // Show the error code inside the chartDiv.
                    chartDiv.innerHTML = "Cannot show elevation: request failed because " + e;
                    });
            }

            // Takes an array of ElevationResult objects, draws the path on the map
            // and plots the elevation profile on a Visualization API ColumnChart.
            function plotElevation({ results }) {
                const chartDiv = document.getElementById("elevation_chart");
                // Create a new chart in the elevation_chart DIV.
                const chart = new google.visualization.ColumnChart(chartDiv);
                // Extract the data from which to populate the chart.
                // Because the samples are equidistant, the 'Sample'
                // column here does double duty as distance along the
                // X axis.
                const data = new google.visualization.DataTable();

                data.addColumn("string", "Sample");
                data.addColumn("number", "Elevation");

                for (let i = 0; i < results.length; i++) {
                    data.addRow(["", results[i].elevation]);
                }

                // Draw the chart using the data within its DIV.
                chart.draw(data, {
                    height: 150,
                    legend: "none",
                    titleY: "Elevation (m)",
                });
            }
        </script>

        <script async="" defer="" src="https://maps.googleapis.com/maps/api/js?callback=initMap">
        </script>
                
    </body>
</html>
